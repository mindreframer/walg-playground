version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: walg-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
      platforms:
        - linux/arm64
    container_name: walg-postgres
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: testdb
      WALG_COMPRESSION_METHOD: lz4
      WALG_UPLOAD_CONCURRENCY: 1
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/scripts
      - ./backups:/backups
    ports:
      - "5432:5432"
    command: >
      postgres -c wal_level=replica -c max_wal_senders=10 -c max_replication_slots=10 -c archive_mode=on -c archive_command='wal-g wal-push %p' -c archive_timeout=60
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      minio:
        condition: service_healthy

  walg:
    build:
      context: .
      dockerfile: Dockerfile.walg
      platforms:
        - linux/arm64
    container_name: walg-client
    environment:
      WALG_S3_PREFIX: s3://walg-backups/
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: us-east-1
      AWS_ENDPOINT: http://minio:9000
      AWS_S3_FORCE_PATH_STYLE: "true"
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: testdb
      PGUSER: postgres
      PGPASSWORD: postgres
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - backup

volumes:
  postgres_data:
  minio_data:
